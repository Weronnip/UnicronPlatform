// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UnicronPlatform.Data;

#nullable disable

namespace UnicronPlatform.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250417174046_Courses")]
    partial class Courses
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("UnicronPlatform.Models.Category", b =>
                {
                    b.Property<int>("category_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<string>("description")
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.HasKey("category_id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("UnicronPlatform.Models.Courses", b =>
                {
                    b.Property<int>("course_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    b.Property<int?>("category_id")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<int>("control_point")
                        .HasColumnType("int")
                        .HasColumnName("control_point");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<int?>("instructor_id")
                        .HasColumnType("int")
                        .HasColumnName("instructor_id");

                    b.Property<decimal?>("price")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("price");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("title");

                    b.Property<int>("total_lessons")
                        .HasColumnType("int")
                        .HasColumnName("total_lessons");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("course_id");

                    b.HasIndex("category_id");

                    b.HasIndex("instructor_id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("UnicronPlatform.Models.Enrollments", b =>
                {
                    b.Property<int>("enrollment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("enrollment_id");

                    b.Property<int?>("course_id")
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<bool?>("status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<int?>("user_id")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("enrollment_id");

                    b.HasIndex("course_id");

                    b.HasIndex("user_id");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("UnicronPlatform.Models.Instructor", b =>
                {
                    b.Property<int>("instructor_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("instructor_id");

                    b.Property<string>("bio")
                        .HasColumnType("longtext")
                        .HasColumnName("bio");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("email")
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<DateTimeOffset?>("experience")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("experience");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("first_name");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("last_name");

                    b.Property<int?>("role_id")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<string>("social_link_tg")
                        .HasColumnType("longtext")
                        .HasColumnName("social_link_tg");

                    b.Property<string>("social_link_vk")
                        .HasColumnType("longtext")
                        .HasColumnName("social_link_vk");

                    b.Property<string>("social_link_wa")
                        .HasColumnType("longtext")
                        .HasColumnName("social_link_wa");

                    b.Property<string>("specialization")
                        .HasColumnType("longtext")
                        .HasColumnName("specialization");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("instructor_id");

                    b.HasIndex("role_id");

                    b.ToTable("Instructor");
                });

            modelBuilder.Entity("UnicronPlatform.Models.LessonLink", b =>
                {
                    b.Property<int>("link_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("link_id");

                    b.Property<string>("link_name")
                        .HasColumnType("longtext")
                        .HasColumnName("link_name");

                    b.Property<string>("path_link")
                        .HasColumnType("longtext")
                        .HasColumnName("path_link");

                    b.HasKey("link_id");

                    b.ToTable("LessonLink");
                });

            modelBuilder.Entity("UnicronPlatform.Models.Lessons", b =>
                {
                    b.Property<int>("lesson_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("lesson_id");

                    b.Property<int?>("course_id")
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("description")
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<int?>("link_id")
                        .HasColumnType("int")
                        .HasColumnName("link_id");

                    b.Property<string>("title")
                        .HasColumnType("longtext")
                        .HasColumnName("title");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("lesson_id");

                    b.HasIndex("course_id");

                    b.HasIndex("link_id");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("UnicronPlatform.Models.Plans", b =>
                {
                    b.Property<int>("plan_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("plan_id");

                    b.Property<string>("description")
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<int>("duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<decimal?>("price")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("price");

                    b.HasKey("plan_id");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("UnicronPlatform.Models.Role", b =>
                {
                    b.Property<int>("role_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<string>("description_role")
                        .HasColumnType("longtext")
                        .HasColumnName("description_role");

                    b.Property<string>("name_role")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name_role");

                    b.HasKey("role_id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("UnicronPlatform.Models.Subscriptions", b =>
                {
                    b.Property<int>("subscription_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("subscription_id");

                    b.Property<DateTime?>("end_date")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("end_date");

                    b.Property<int?>("plan_id")
                        .HasColumnType("int")
                        .HasColumnName("plan_id");

                    b.Property<DateTime?>("start_date")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("start_date");

                    b.Property<byte?>("status")
                        .HasColumnType("tinyint unsigned")
                        .HasColumnName("status");

                    b.Property<int?>("user_id")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("subscription_id");

                    b.HasIndex("plan_id");

                    b.HasIndex("user_id");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("UnicronPlatform.Models.UserProgress", b =>
                {
                    b.Property<int>("progress_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("progress_id");

                    b.Property<int?>("enrollments_id")
                        .HasColumnType("int")
                        .HasColumnName("enrollments_id");

                    b.Property<decimal?>("progress_percentage")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("progress_percentage");

                    b.Property<byte?>("total_lessons_completed")
                        .HasColumnType("tinyint unsigned")
                        .HasColumnName("total_lessons_completed");

                    b.HasKey("progress_id");

                    b.HasIndex("enrollments_id")
                        .IsUnique();

                    b.ToTable("UserProgress");
                });

            modelBuilder.Entity("UnicronPlatform.Models.Users", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<string>("avatar")
                        .HasColumnType("longtext")
                        .HasColumnName("avatar");

                    b.Property<decimal?>("balance")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("balance");

                    b.Property<DateTimeOffset?>("birth_date")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("birth_date");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("first_name");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("last_name");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("password");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("phone");

                    b.Property<int?>("role_id")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("user_id");

                    b.HasIndex("role_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UnicronPlatform.Models.Courses", b =>
                {
                    b.HasOne("UnicronPlatform.Models.Category", "Category")
                        .WithMany("Courses")
                        .HasForeignKey("category_id");

                    b.HasOne("UnicronPlatform.Models.Instructor", "Instructor")
                        .WithMany("Courses")
                        .HasForeignKey("instructor_id");

                    b.Navigation("Category");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("UnicronPlatform.Models.Enrollments", b =>
                {
                    b.HasOne("UnicronPlatform.Models.Courses", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("course_id");

                    b.HasOne("UnicronPlatform.Models.Users", "User")
                        .WithMany("Enrollments")
                        .HasForeignKey("user_id");

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UnicronPlatform.Models.Instructor", b =>
                {
                    b.HasOne("UnicronPlatform.Models.Role", "Role")
                        .WithMany("Instructor")
                        .HasForeignKey("role_id");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("UnicronPlatform.Models.Lessons", b =>
                {
                    b.HasOne("UnicronPlatform.Models.Courses", "Course")
                        .WithMany("Lessons")
                        .HasForeignKey("course_id");

                    b.HasOne("UnicronPlatform.Models.LessonLink", "LessonLink")
                        .WithMany("Lessons")
                        .HasForeignKey("link_id");

                    b.Navigation("Course");

                    b.Navigation("LessonLink");
                });

            modelBuilder.Entity("UnicronPlatform.Models.Subscriptions", b =>
                {
                    b.HasOne("UnicronPlatform.Models.Plans", "Plan")
                        .WithMany()
                        .HasForeignKey("plan_id");

                    b.HasOne("UnicronPlatform.Models.Users", "User")
                        .WithMany("Subscriptions")
                        .HasForeignKey("user_id");

                    b.Navigation("Plan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UnicronPlatform.Models.UserProgress", b =>
                {
                    b.HasOne("UnicronPlatform.Models.Enrollments", "Enrollments")
                        .WithOne("UserProgress")
                        .HasForeignKey("UnicronPlatform.Models.UserProgress", "enrollments_id");

                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("UnicronPlatform.Models.Users", b =>
                {
                    b.HasOne("UnicronPlatform.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("role_id");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("UnicronPlatform.Models.Category", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("UnicronPlatform.Models.Courses", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("UnicronPlatform.Models.Enrollments", b =>
                {
                    b.Navigation("UserProgress");
                });

            modelBuilder.Entity("UnicronPlatform.Models.Instructor", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("UnicronPlatform.Models.LessonLink", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("UnicronPlatform.Models.Role", b =>
                {
                    b.Navigation("Instructor");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("UnicronPlatform.Models.Users", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("Subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
